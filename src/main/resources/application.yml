management:
  httpexchanges:
    recording:
      enabled: true
  health:
    ping:
      enabled: false
    diskspace:
      enabled: false
  endpoint:
    health:
      show-details: always
      show-components: always
    env:
      show-values: always
    configprops:
      show-values: always
  endpoints:
    web:
      base-path: /monitoring
      exposure:
        include: '*'
spring:
  kafka:
    bootstrap-servers: ${kafka.brokers}
    properties:
      basic:
        auth:
          user:
            info: ${kafka.schema.registry.user}:${kafka.schema.registry.password}
          credentials:
            source: USER_INFO
      schema:
        registry:
          url: ${kafka.schema.registry}
      ssl:
        endpoint:
          identification:
            algorithm: ''
    security:
      protocol: SSL
    ssl:
      trust-store-location: file:${kafka.truststore.path}
      trust-store-type: JKS
      trust-store-password: ${kafka.credstore.password}
      key-store-location: file:${kafka.keystore.path}
      key-store-type: PKCS12
      key-store-password: ${kafka.credstore.password}
    consumer:
      group-id: ${spring.application.name}-${env}
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          deserializer:
            key:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      properties:
        max:
          request:
            size: 2000000
  cache:
    cache-names: ardetails
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  jackson:
    serialization:
      write-dates-as-timestamps: true
      indent-output: true
    default-property-inclusion: non_null
    deserialization:
      accept-single-value-as-array: true
    mapper:
      accept-case-insensitive-enums: true
      accept-case-insensitive-properties: true
  application:
    name: helseid-nav-test
  datasource:
    url: jdbc:postgresql://${db.host}:${db.port}/${db.database}
    username: ${db.username}
    password: ${db.password}
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: 2
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${helse-id.issuer}
      client:
        registration:
          edi20-1:
            authorization-grant-type: client_credentials
            client-authentication-method: private_key_jwt
            client-id: ${clientid-test1}
            provider: helse-id
            scope:
              - nhn:msh/api
          edi20-2:
            authorization-grant-type: client_credentials
            client-authentication-method: private_key_jwt
            client-id: ${clientid-test2}
            provider: helse-id
          pdl:
            authorization-grant-type: client_credentials
            client-authentication-method: client_secret_basic
            client-id: ${azure.app.client.id}
            client-secret: ${azure.app.client.secret}
            provider: aad
            scope:
              - api://${env}-fss.pdl.pdl-api/.default
          arbeidsforhold:
            authorization-grant-type: client_credentials
            client-authentication-method: client_secret_basic
            client-id: ${azure.app.client.id}
            client-secret: ${azure.app.client.secret}
            provider: aad
            scope:
              - api://dev-fss.arbeidsforhold.aareg-services-nais-q1/.default
          helse-id:
            provider: helse-id
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            client-id: ${clientid}
            client-name: NAV Helseopplysninger
            scope:
              - profile
              - openid
              - offline_access
              - helseid://scopes/identity/assurance_level
              - helseid://scopes/identity/pid
              - helseid://scopes/identity/security_level
              - helseid://scopes/hpr/hpr_number
              - nhn:flr-public/read
          helse-id1:
            provider: helse-id
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            client-id: ${clientid}
            client-name: NAV Helseopplysninger
            scope:
              - profile
              - openid
              - offline_access
              - helseid://scopes/identity/assurance_level
              - helseid://scopes/identity/pid
              - helseid://scopes/identity/security_level
              - helseid://scopes/hpr/hpr_number
              - nhn:flr-public/read
        provider:
          aad:
            issuer-uri: ${azure.openid.config.issuer}
          helse-id:
            issuer-uri: ${helse-id.issuer}
  threads:
    virtual:
      enabled: true

adresse:
  url: https://${wshost}/v1/AR/Basic
  username: ${fastlege.username}
  password: ${fastlege.password}

arbeidsforhold:
  base-uri: https://${aareg}

organisasjon:
  base-uri: https://${ereg}

helse-id:
  issuer: https://${stshost}

fastlege:
  url: https://${wshost}/v2/flr/Basic

authserver:
  url: https://${stshost}


dialogmelding:
  base-uri: https://${dialogmelding.partnerhost}
ibm:
  mq:
    channel: ${dialogmelding.channel}
    user: ${dialogmelding.username}
    password: ${dialogmelding.password}
    queue-manager: ${dialogmelding.qm}
    application-name: ${spring.application.name}
    conn-name: ${dialogmelding.host}(${dialogmelding.port})
pdl:
  base-uri: https://pdl-api.${env}-fss-pub.nais.io/graphql
edi20:
  base-uri: https://${edihost}
edi20deft:
  base-uri: https://${edidefthost}
springdoc:
  swagger-ui:
    csrf:
      enabled: true
innsending:
  recovery:
    retries: 3
    backoff: 10000
    retrysuffix: .retry
    dltsuffix: .dlt
    main: helseopplysninger.edi20.main